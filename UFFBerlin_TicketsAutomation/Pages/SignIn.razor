@page "/sign-in"
@using UFFBerlin_TicketsAutomation.Data.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject GoogleAuthorizationService GoogleAuthorizationService
@inject NavigationManager Navigation

<h3>Sign In</h3>

@if (!isSignedIn)
{
    <button class="btn btn-primary" @onclick="HandleSignIn">Sign In with Google</button>
}

@code {
    private bool isSignedIn;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isSignedIn = user.Identity != null && user.Identity.IsAuthenticated;

        if (isSignedIn)
        {
            Navigation.NavigateTo("/"); // Redirect if already signed in
        }
    }

    private async Task HandleSignIn()
    {
        await GoogleAuthorizationService.GetGoogleCredentialAsync();
        Navigation.NavigateTo("/"); // Redirect after sign-in
    }
}
