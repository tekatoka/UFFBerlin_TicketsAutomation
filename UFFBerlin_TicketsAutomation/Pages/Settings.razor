@page "/settings"
@inject Data.SettingsService SettingsService

@code {
    private Data.SettingsModel settings = new();

    protected override void OnInitialized()
    {
        // Load the current settings from the service
        settings = SettingsService.Settings;
    }

    private async Task SaveSettings()
    {
        await SettingsService.UpdateSettingsAsync(settings);

        // Reload the settings after saving to ensure they are applied dynamically
        SettingsService.ReloadSettings();
    }
}

<h3>Configure Settings</h3>

<div class="form-group">
    <label>Source Folder ID:</label>
    <input type="text" class="form-control" @bind="settings.SourceFolderId" />
</div>

<div class="form-group">
    <label>Destination Folder ID:</label>
    <input type="text" class="form-control" @bind="settings.DestinationFolderId" />
</div>

<div class="form-group">
    <label>Archive Folder ID:</label>
    <input type="text" class="form-control" @bind="settings.ArchiveFolderId" />
</div>

<div class="form-group">
    <label>Email Subject:</label>
    <input type="text" class="form-control" @bind="settings.EmailSubject" />
</div>

<div class="form-group">
    <label>Email Body (HTML):</label>
    <textarea class="form-control" @bind="settings.EmailTextHtml"></textarea>
</div>

<button class="btn btn-primary" @onclick="SaveSettings">Save Settings</button>

<p>Settings are saved successfully once you click "Save Settings".</p>
