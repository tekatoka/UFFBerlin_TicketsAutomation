@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using UFFBerlin_TicketsAutomation.Data
@using UFFBerlin_TicketsAutomation.Data.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject GoogleAuthorizationService GoogleAuthorizationService
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager Navigation
@inject EmailService EmailService

<PageTitle>UFFB Ticket Automation</PageTitle>

<div class="page">
    <div class="sidebar">
        <Header />
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            @if (isSignedIn)
            {
                <div>
                    <span>You are signed in as: @EmailService.SenderName<br />(@EmailService.SenderEmail)</span>
                    <button class="btn btn-primary" @onclick="SignOut">Sign Out</button>
                </div>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {

    private bool isSignedIn;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        { await CheckAuthentication(); }
    }

    private async Task CheckAuthentication()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        var userToken = HttpContextAccessor.HttpContext?.Session.GetString("user_access_token");

        isSignedIn = user.Identity != null && user.Identity.IsAuthenticated && !string.IsNullOrEmpty(userToken);

        if (isSignedIn)
        {
            if (string.IsNullOrEmpty(EmailService.SenderEmail) || string.IsNullOrEmpty(EmailService.SenderName))
            {
                await EmailService.FetchUserProfileAsync();
            }
        }

        StateHasChanged();  // Re-render to show SignOut button and user info
    }

    private async Task SignOut()
    {
        await GoogleAuthorizationService.SignOutUser();
        isSignedIn = false;
        Navigation.NavigateTo("/sign-in", true);  // Force a reload of the sign-in page after logout
    }
}
